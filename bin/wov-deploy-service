#!/usr/bin/env bash


FOLD=$(tput cols)
export PATH=$PATH:/usr/local/bin/wovlib

DOECHO=1
DIDRUN=0
CURSERVICE=""
RETVAL=0

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` [options]

Runs, tests or kills a service for this Kubernetes context (ex. a database, helm chart, etc). These commands are run in order.

  -l         : lists services (in wovtools/services directory)
  -s service : Sets the name of the service (look for in wovtools/services/SERVICE)
  -r : run the service if test fails
  -R : run without testing
  -t : test the service (if error code returned, fails) (./wovtools/services/SERVICE-test)
  -k : kill the service (./wovtools/services/SERVICE-kill)
  -h : this help
  -q/-v : quiet/verbose

ex. `basename $0` -s SERVICE -t    - to test 
ex. `basename $0` -s SERVICE -r    - to run, testing first
ex. `basename $0` -s SERVICE -R    - to run without a test


EOF
}

. wov-env-ops fDisplayOptions "${@}"
. <(wov-env --provider --exports)




function doTest()
{
  local retval=1

  l_verbose "...test"
  if [ -e ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-test ]; then
    # OUTIS=$(${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-test)
    ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-test
    retval=$?
  else
    l_verbose "  ...no test script for '${DOSERVICE}'. assumming success."
    #OUTIS=""
    retval=0
  fi
#  >&2 l_verbose "<<EOF\n${OUTIS}\nEOF\n  ...result ${retval}\n"
  if [ "${retval}" != "0" ]; then
    l_
    l_error "failed test '${DOSERVICE}'."
    l_
  fi

  DIDRUN=1
  return $retval
}


function doList()
{
  local services=( $(cd ${WOV_BASEDIR}/wovtools/services && find * -maxdepth 0 -type f 2> /dev/null) )

  for f in ${services[@]}; do
    l_ $f
  done

  DIDRUN=1
}

function doRun()
{
  local retval=1
  l_verbose "...run"

  if [ -e ${WOV_BASEDIR}/wovtools/services/${DOSERVICE} ]; then
    ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}
    retval=$?
  else
    l_error "Unknown services '${DOSERVICE}'."
    retval=1
  fi

  DIDRUN=1
  return $retval
}

function doKill()
{
  if [ ${DOECHO} -ge 2 ]; then echo "...kill"; fi
  ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-kill
  DIDRUN=1
  RETVAL=$?
}

# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2

  elif [ "$1" == "-s" ]; then
    shift
    DOSERVICE="$1"
    l_verbose "...setting service '${DOSERVICE}'."
    shift

  elif [ "$1" == "-R" ]; then
    shift
    doRun
    RETVAL=$?

  elif [ "$1" == "-r" ]; then
    shift
    doTest
    RETVAL=$?
    if [ "${RETVAL}" != "0" ]; then
      doRun
      RETVAL=$?
    fi

  elif [ "$1" == "-t" ]; then
    shift
    doTest
    RETVAL=$?

  elif [ "$1" == "-l" ]; then
    shift
    doList

  elif [ "$1" == "-k" ]; then
    shift
    doKill

  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done

if [ $WOV_DODEFAULTCOMMAND -eq 1 ] && [ "${DIDRUN}" == "0" ]; then
  printf "\n\nERROR: you did not call any services.\n"
  fDisplayOptions
  exit 1
fi

exit ${RETVAL}

