#!/usr/bin/env bash



# ---------------------------------------------------------------------
# Import Env
# ---------------------------------------------------------------------
wov-env-build -q --local
if [ "$?" != "0" ]; then
  exit 1
fi
pushenvargs=( "$@" )
set ""
. wov-env --provider
. wov-ns-check
set -- "${pushenvargs[@]}"

DOECHO=1
DOFORCE=0
DIDRUN=0
FOLD=$(tput cols)
CURSERVICE=""
RETVAL=0



# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` [options]

Runs, tests or kills a service for this Kubernetes context (ex. a database, helm chart, etc). These commands are run in order.

  -s service : Sets the name of the service (look for in wovtools/services/SERVICE)
  -r : run the service if test fails 
  -R : run without testing
  -t : test the service (if error code returned, fails) (./wovtools/services/SERVICE-test)
  -k : kill the service (./wovtools/services/SERVICE-kill)
  -h : this help
  -q/-v : quiet/verbose

EOF
}

function doTest()
{
  if [ ${DOECHO} -ge 2 ]; then echo "...test"; fi
  if [ -e ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-test ]; then
    echo 1
    OUTIS=$(${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-test)
    RETVAL=$?
    echo 2
  else
    if [ ${DOECHO} -ge 2 ]; then echo "  ...no test script for '${DOSERVICE}'"; fi
    OUTIS=""
    RETVAL=0
  fi
  if [ ${DOECHO} -ge 2 ]; then printf "<<EOF\n${OUTIS}\nEOF\n  ...result ${RETVAL}\n"; fi
  if [ "${RETVAL}" != "0" ]; then
    echo
    echo "ERROR: failed test '${DOSERVICE}'."
    echo
  fi
  DIDRUN=1
}

function doRun()
{
  if [ ${DOECHO} -ge 2 ]; then echo "...run"; fi
  ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}
  DIDRUN=1
  RETVAL=$?
}

function doKill()
{
  if [ ${DOECHO} -ge 2 ]; then echo "...kill"; fi
  ${WOV_BASEDIR}/wovtools/services/${DOSERVICE}-kill
  DIDRUN=1
  RETVAL=$?
}

# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2

  elif [ "$1" == "-s" ]; then
    shift
    DOSERVICE="$1"
    if [ ${DOECHO} -ge 2 ]; then echo "...setting service '${DOSERVICE}'."; fi
    shift

  elif [ "$1" == "-R" ]; then
    shift
    DOFORCE=1
    DOSERVICE="$1"
    shift
    doRun
    DOFORCE=0

  elif [ "$1" == "-r" ]; then
    shift
    DOSERVICE="$1"
    shift
    doTest
    if [ "${RETVAL}" != "0" ]; then doRun; fi

  elif [ "$1" == "-t" ]; then
    shift
    doTest

  elif [ "$1" == "-k" ]; then
    shift
    doKill

  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done

if [ "${DIDRUN}" == "0" ]; then
  printf "\n\nERROR: you did not call any services.\n"
  fDisplayOptions
  exit 1
fi

exit ${RETVAL}

