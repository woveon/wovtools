#!/usr/bin/env bash

DOECHO=1
DOFORCE=0
FOLD=80
BLOCK=0

# ---------------------------------------------------------------------
# Build right before to update any files
# ---------------------------------------------------------------------
wov-build -e

# ---------------------------------------------------------------------
# Import Env
# ---------------------------------------------------------------------
pushargs=( "$@" )
set ""
. wov-env
. wov-ns-check
set -- "${pushargs[@]}"


if [ "$WOV_DEVMODE" != "remote" ]; then
  printf "\nERROR: Can not push when is devmode '${WOV_DEVMODE}'. Run 'wov-env --remote'.\n\n"
  exit 1
fi

printf "\n"
figlet wov-push
printf " version: ${WOV_STAGE}_${WOV_PVER}_${WOV_SVER}\n\n"


# Check local code is checked in and pushed
wov-git-check ${WOV_BASEDIR}
R1=$?
wov-git-check ${WOV_BASEDIR}/wovtools/secrets
R2=$?
if [ "$R1" != "0" ] || [ "$R2" != "0" ]; then 
  printf "\nERROR: wov-push exiting\n" 1>&2
  exit 1
fi
echo "  ... check for database changes that could block the push"
wov-db-commit --any-push-blockage
R3=$?
if [ "$R3" != 0 ]; then exit 1; fi


# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` [options]

Macro command that pushes containers, then env. It uses:
   wov-push-containers
   wov-push-env

  -h : this help
  -q/-v : quiet/verbose

EOF
}

METAARGS=""

# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0
    METAARGS="${METAARGS} -q "

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2
    METAARGS="${METAARGS} -v "


  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done


echo "  ... wov-push-containers ${METAARGS}"
wov-push-containers ${METAARGS}
if [ "$?" != "0" ]; then
  exit 1
fi
echo "  ... wov-push-env ${METAARGS}"
wov-push-env ${METAARGS}
if [ "$?" != "0" ]; then
  exit 1
fi

echo "  ... wov-db-commit ${METAARGS}"
wov-db-commit ${METAARGS}
if [ "$?" != "0" ]; then
  exit 1
fi
