#!/usr/bin/env bash

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s

usage: `basename $0` [options]

Formal push of a version into the archive. This is a macro command that pushes containers, Kubernetes and database changes at once.

  --skip-db-checks : skip the checks for database inconsistencies (DB checks are slow)

  --check : just do a bunch of checks first

  -h : this help
  -q/-v : quiet/verbose

EOF
}
. wov-env-ops fDisplayOptions "$@"

DOFORCE=0
SKIPDBCHECKS=0

# ---------------------------------------------------------------------
# RETURNS: 0 on sucess, 1 on fail
# ---------------------------------------------------------------------
function doPushChecks()
{
  local retval=0

  l_ "...do multiple checks"
#  l_ "  ... build cluster's environment (origin self)"
#  wov-env-build -q -f --origin self --cluster
#  if [ "$?" != "0" ]; then exit 1; fi

  printf "\n"
  figlet wov-push
  printf " version: ${WOV_STAGE}_${WOV_PVER}_${WOV_SVER}\n\n"

  l_ "  ...check namespace alignment"
  wov-ns-check
  retval=$?

  l_ '  ...check local code is checked in and pushed'
  wov-git-check ${WOV_BASEDIR}
  R1=$?
  wov-git-check ${WOV_BASEDIR}/wovtools/secrets
  R2=$?
  if [ "$R1" != "0" ] || [ "$R2" != "0" ]; then 
    retval=1
  fi

  if [ "$SKIPDBCHECKS" != "1" ]; then
    l_ "  ... check for database changes that could block the push"
    wov-push-db -v --any-push-blockage
    Re=$?
    if [ "$Re" != 0 ]; then retval=1; fi
  else
    l_warn "Skipping check for database changes that could block the push"
  fi

  l_ "  ... wov-push-k8s check: ${WOV_ORIGIN}"
  wov-push-k8s  --check ${WOV_METAARGS}
  if [ $? -ne 0 ]; then
    l_error "   ... wov-push-k8s check failed"
    retval=1
  fi

  return $retval
}



# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "--skip-db-checks" ]; then
    shift
    SKIPDBCHECKS=1

  elif [ "$1" == "--check" ]; then
    shift
    doPushChecks
    exit $?
    WOV_DEDEFAULTCOMMAND=0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done


if [ ${WOV_DODEFAULTCOMMAND} == 1 ]; then

  doPushChecks
  if [ $? != 0 ]; then l_error "Failed one or more checks. Correct the above and retry push."; exit 1; fi

  l_ "  ... wov-push-container ${WOV_METAARGS}"
  wov-push-container ${WOV_METAARGS}
  if [ "$?" != "0" ]; then
    l_error "   ... wov-push-container failed"
    exit 1
  fi

  l_ "  ... wov-push-k8s ${WOV_METAARGS}"
  wov-push-k8s ${WOV_METAARGS}
  if [ "$?" != "0" ]; then
    l_error "   ... wov-push-k8s failed"
    exit 1
  fi

  l_ "  ... wov-push-db ${WOV_METAARGS}"
  wov-push-db ${WOV_METAARGS}
  if [ "$?" != "0" ]; then
    l_error "   ... wov-push-db failed"
    exit 1
  fi

  l_ "   ... wov-push success"
fi
