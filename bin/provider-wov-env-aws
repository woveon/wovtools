#!/usr/bin/env bash

if [ "${WOV_CLUSTER}" == "" ]; then
  echo "ERROR: don't call wov-env-aws directly, but through 'wov-env --provider'"
  exit 1
fi

#export WOV_cluster_dns_domain=`wov-env --cluster ${WOV_CLUSTER} --var WOV_cluster_dns_domain`
if [ "${WOV_cluster_dns_domain}" == "" ]; then
  echo "ERROR: provider-wov-env-aws requires variable 'WOV_cluster_dns_domain'."
  exit 1
fi


# ---------------------------------------------------------------------
# Turns region codes into AWS regions.
# ---------------------------------------------------------------------
function fConvertRegionCodeAWS()
{
  local retcode=1
  local retval=
  case $1 in
    va)  retval='us-east-1'; retcode=0 ;;
    iad) retval='us-east-1'; retcode=0 ;;
    *)   >&2 printf "WARNING: unknown AWS region code of '$1'.\n"
  esac
  echo "$retval"
  return $retcode
}


# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
REGIONVARS=( 'AWS_REGION' 'AWS_ZONES' 'AWS_VPC' )

AWS_ZONES="c d"
  # --- fixed for now

AWS_REGION="$(fConvertRegionCodeAWS $WOV_REGION)"
if [ "${AWS_REGION}" == "" ]; then printf "\n\nERROR: unknown AWS_REGION.\n\n"; exit 1; fi

AWS_VPC="$(aws ec2 describe-vpcs --filters "Name=tag:Name,Values=${WOV_CLUSTER}.${WOV_cluster_dns_domain}" --query 'Vpcs[0].VpcId' | ${SED} -e 's/^"//' -e 's/"$//')"
if [ "$?" != "0" ]; then printf "\n\nERROR: failed to connect to AWS to understand VPC.\n\n"; exit 1; fi

export AWS_REGION

export AWS_ZONES
export AWS_VPC
