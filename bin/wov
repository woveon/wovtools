#!/usr/bin/env bash
  

DOECHO=1
FOLD=140
DIDCOMMAND=0


# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` 

EOF
}


# ---------------------------------------------------------------------
# display commands
# ---------------------------------------------------------------------
function fDisplayCommands()
{

  cat <<EOF | fold -w ${FOLD} -s


# ENVIRONMENT:
- wov-env-build  - Build a CLUSTER configuration.
- wov-env        - Export a CLUSTER configuration as variables for scripts. 


# COMMANDLINE (CLI):
- wov-aws        - Help
- wov-cd         - Changes directory to the *project* directory. These projects are defined in the wovtools file, found in your HOME directory.
- wov-bastion    - Lookup information about the bastion host
- wov-bastion-connection - Manages an ssh connection to a bastion host for the Kubernetes cluster.
- wov-cmd        - Runs a command found in the cmds directory.
- wov-ed         - Opens an editor to edit the project's WovTools src or compiled resource file.
- wov-ls         - Lists information of the current file space.
- wov-ns         - Display namespace information
- wov-db-connect - Connect to a database via SSL tunnelling through the bastion host and has db utilities.
- wov-db-cloud   - Manages database cloud resources.
- wov-p          - Takes a k8s pod stem and returns the name of the matching pod in a namespace (--ith n, to match *nth* pod).
- wov-plog       - Connects to a running pod (via podstem) and logs its data, with a -f to follow it.


# VIRTUAL HOST DEV:
- wov-vh         - Virtual host commands for development in a pod in the cluster.
- wov-vh-pushgit - This script pushes the project's git repo to vh in a safe manner.
- wov-vh-pulldir - Pulls from the vh as vh:ARG1 which is the working dir on pod, to local directory.


#PUSH to ARCHIVE: BUILD and PUSH
- wov-push-container - Pushes the container(s) by building and pushing to the archive.
- wov-push-k8s       - Pushes the Kubernetes files to the archive. (was wov-build-conf or wov-arch-conf)
- wov-push-db        - (previous wov-db-commit) This moves database changes for the current checked in code (pver) into the db registry for versioning.
- wov-push           - Formal push of a version into the archive.


# CLUSTER DEV:
- wov-deploy-service - Runs, tests or kills a service for this Kubernetes context (ex. a database, helm chart, etc).
- wov-deploy-info    - Shows information of a running project
- wov-deploy         - Deploys and updates a running kubernetes project from an archive.


# INTERNAL:
- wov-git-check - Checks that the git archives on path(s) are committed and pushed to origin.
- wov-push-container-check - Checks if the arg1 container needs to be built and pushed.
- wov-ns-check  - Ensures that the Kubernets namespace and git branch align
- wov-compile
- wov-pwait     - Waits for a pod (full name) to enter the running state, by continuous polling. 
- wov-pshell


# CLOUD: (tailors WovTools to a Cloud provider)
- wov-env-aws   -


# UNDER DEVELOPMENT:
- wov-deploy-cl           - (UNDER DEV) Builds a cluster.
- wov-db-deploy -
- wov-init      - under dev


# IGNORE: (will be deleted or under development)
- wov-mod
- wov-envg
- wov-hbs
- wov-portforward
- wov-project
- wov-stage
- wov-users
- wov_stage-select
- wovg-dir



EOF
}



# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2

  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    DIDCOMMAND=1
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done


if [ "$DIDCOMMAND" == "0" ]; then
  fDisplayCommands
fi
