#!/usr/bin/env bash

RETVAL=0

# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{ 
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` [options] [path ...]

Checks that the git archives on path(s) are committed and pushed to origin.

  -h : this help
  -q : quiet, no output
  -v : verbose output

EOF
}

. wov-env-ops fDisplayOptions "$@"

# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  l_error "***ERROR: unknown option '$1'."
  fDisplayOptions
  exit 1
done


if [ "$#" == "0" ]; then
  PATHS=( "." )
else
  PATHS=${@}
fi

for p in ${PATHS}; do

  # ---------------------------------------------------------------------
  # Check code changes and added/removed files are committed into current branch.
  # ---------------------------------------------------------------------

  # check current repo
  R=$(cd ${p} && git status -s)
  RR=${?}
  if [ "$RR" != "0" ] || [ "$R" != "" ]; then
    if [ $DOECHO -ge 1 ]; then
      l_warn "directory '${p}': failed code/env commit-check. Check in your code/env values to Archive."
    fi
    if [ $DOECHO -ge 2 ]; then 
      l_verbose "*** git status : start ************************************************" 
      cd ${p} && git status
      l_verbose "*** git status : end **************************************************"
    fi
    # RETVAL=$((RETVAL+1))
    RETVAL=1
  else
    l_verbose "SUCCESS: '${p}': wov-push-check commit code/env"
  fi


  if [ "$RETVAL" == "0" ]; then
    # ---------------------------------------------------------------------
    # Check local changes are pushed
    # ---------------------------------------------------------------------
    # check code/env
    # R=$(cd ${p} && git push -nq)
    R=$(cd ${p} && test "$(git rev-parse @{u})" = "$(git rev-parse HEAD)" )
    RR=${?}
    if [ "$RR" != "0" ] || [ "$R" != "" ]; then
      if [ $DOECHO -ge 1 ]; then
        l_warn "'${p}': failed code/env push check. Push your archive."
      fi
      if [ $DOECHO -ge 2 ]; then 
        l_verbose "*** git status : start ************************************************ " 
        cd ${p} && git status
        l_verbose "*** git status : end ************************************************** " 
      fi
      # RETVAL=$((RETVAL+4))
      RETVAL=2
    else
      l_verbose "SUCCESS: '${p}': wov-push-check push code/env."
    fi
  fi

done

if [ "${RETVAL}" != "0" ]; then
  exit ${RETVAL}
fi
