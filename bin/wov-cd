#!/usr/bin/env bash

DOECHO=1
FOLD=140
ONEXIT=0


# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s


usage: . `basename $0` {options} [project]

Changes directory to the *project* directory. These projects are defined in the wovtools file, found in your HOME directory.

NOTE: $HOME/.wovtools is a JSON file with .projects.{}, where each entry in .projects has a '.dir' entry, corresponding to the project directory.

NOTE2: Call with the '.' in front, or set a line in your .bash_profile :
  function wcd() {
    . wov-cd $*
  }

ex. $HOME/.wovtools: { "projects" : { "myproject" : { "dir" : "/path/to/project" } } }

  -q : quiet output
  -e : echo directory 
  -v : verbose output
  -h/--help : this help
  -l : list projects

EOF
}


# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function doListProjects()
{
  jq -r ".projects" ${HOME}/.wovtools
}


function doGetDir()
{
  P=$(echo $1 | cut -d'/' -f1)
  D=$(jq -r ".projects.$P.dir" ${HOME}/.wovtools 2> /dev/null)
  echo "$D"
}

# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2

  elif [ "$1" == "-e" ]; then
    shift
    A=$(doGetDir $1)
    echo $A
    exit 0

  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    exit 0

  elif [ "$1" == "-l" ]; then
    shift
    doListProjects
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done




if [ ! -e ${HOME}/.wovtools ]; then 
  printf "\n\nERROR: no .wovtools file in home directory.\n" 1>&2
  ONEXIT=1
fi

if [ "$#" == 1 ]; then

  P=$(echo $1 | cut -d'/' -f1)
  D=$(jq -r ".projects.$P.dir" ${HOME}/.wovtools 2> /dev/null)
  if [ "$?" != "0" ]; then
    printf "\nERROR: json related error. Check your ~/.wovtools file.\n" 1>&2
    printf " - $(jq -r ".projects.$P.dir" ${HOME}/.wovtools 2>&1)\n" 1>&2
    ONEXIT=1
  else
    if [ "$D" == "null" ]; then 
      printf "\n\nERROR: no project entry of '$P'.\n" 1>&2
      ONEXIT=1
    else
      D1=( ${1//\// } )
      D1=( "${D1[@]:1:}" )
      GO="$D$D1"
      if [ ! -e "${D}${D1}" ]; then
        printf "\n\nERROR: no directory '$D$D1'.\n" 1>&2
        ONEXIT=1
      else
        cd $GO
        if [ ${DOECHO} -ge 1 ]; then
          printf "\n---- project '$P' : $GO\n"
          # sleep .5
          ls
        fi
      fi
    fi
  fi
else
  printf "\n\nERROR: bad number of parameters. Requires a project name.\n" 1>&2
  ONEXIT=1
fi



return ${ONEXIT}
