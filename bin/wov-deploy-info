#!/usr/bin/env bash

DOECHO=1
DOFORCE=0
FOLD=`tput cols`


# --------------------------------------------------------------------- 
# Import Env 
# --------------------------------------------------------------------- 
#wov-env-build -q --local
#if [ "$?" != "0" ]; then
#  exit 1
#fi
pushenvargs=( "$@" )
set ""
. wov-env #--provider
. wov-ns-check
set -- "${pushenvargs[@]}"




# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{ 
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` [options]

Shows information of a running project.

  --pver        : project version of deployment
  --sver        : secrets version of deployment
  --deployed    : unix epoc time of when first deployed
  --deployed-hr : human readable time of when first deployed
  --meta        : full meta data of deployment

  -h : this help
  -q/-v : quiet/verbose

EOF
}



# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0

  elif [ "$1" == "--pver" ]; then
    shift
    kubectl get namespace ${WOV_NS} -o json | jq -r '.metadata.labels.WOV_PVER'

  elif [ "$1" == "--sver" ]; then
    shift
    kubectl get namespace ${WOV_NS} -o json | jq -r '.metadata.labels.WOV_SVER'

  elif [ "$1" == "--deployed" ]; then
    shift
    kubectl get namespace ${WOV_NS} -o json | jq -r '.metadata.labels.WOV_DEPLOYED'

  elif [ "$1" == "--deployed-hr" ]; then  # human readable
    shift
    date -j -r $(kubectl get namespace ${WOV_NS} -o json | jq -r '.metadata.labels.WOV_DEPLOYED')

  elif [ "$1" == "--meta" ]; then
    shift
    kubectl get namespace ${WOV_NS} -o json | jq -r '.metadata.labels'

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2

  elif [ "$1" == "-f" ]; then
    shift
    DOFORCE=1

  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done


