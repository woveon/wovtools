#!/usr/bin/env bash

DOECHO=1
FOLD=100

# grab it if not defined
if [ "${WOV_BASEDIR}" == "" ]; then
  WOV_BASEDIR=$(git rev-parse --show-toplevel)
fi


# ---------------------------------------------------------------------
# ---------------------------------------------------------------------
function fDisplayOptions()
{
  cat <<EOF | fold -w ${FOLD} -s


usage: `basename $0` [options]

Check that all git files are checked in, regular and secret.

  -h : this help
  -q : quiet, no output
  -v : verbose output

EOF
}


#git diff-index --quiet HEAD || echo "local diffs" && echo "no local diffs"


# ---------------------------------------------------------------------
# Handle Params
# ---------------------------------------------------------------------
while [[ $1 =~ ^- ]]; do

  if [ "$1" == "-q" ]; then
    shift
    DOECHO=0

  elif [ "$1" == "-v" ]; then
    shift
    DOECHO=2

  elif [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    fDisplayOptions
    exit 0

  else
    echo
    echo "***ERROR: unknown option '$1'."
    echo
    fDisplayOptions
    exit 1
  fi
done


# --------------------------------------------------------------------- 
# Check code changes and added/removed files are committed into current branch.
# --------------------------------------------------------------------- 

# check current repo
if [ "$(git status -s)" != "" ]; then
  if [ $DOECHO -ge 1 ]; then
    echo "WARNING: failed code/env commit-check. Check in your code/env values to Archive."
  fi
  if [ $DOECHO -ge 2 ]; then
    git status
  fi
  exit 1
else
  if [ "$DOECHO" == "2" ]; then
    echo "SUCCESS: wov-push-check commit code/env"
  fi
fi


# check secrets repo
if [ "$(cd ${WOV_BASEDIR}/wovtools/secrets && git status -s)" != "" ]; then
  if [ "$DOECHO" == "1" ]; then
    echo "WARNING: failed secrets commit-check. Check in your secrets archives."
  elif [ "$DOECHO" == "2" ]; then
    echo "WARNING: failed secrets commit-check. Check in your secrets archives."
    cd ${WOV_BASEDIR}/wovtools/secrets && git status
  fi
  exit 1
else
  if [ "$DOECHO" == "2" ]; then
    echo "SUCCESS: wov-push-check commit secrets."
  fi
fi



# --------------------------------------------------------------------- 
# Check local changes are pushed to origin
# --------------------------------------------------------------------- 
MYBRANCH=$(git rev-parse --abbrev-ref HEAD)
MYSBRANCH=$(cd ${WOV_BASEDIR}/wovtools/secrets && git rev-parse --abbrev-ref HEAD)

# check code/env
if [ "$(git log origin/${MYBRANCH}..${MYBRANCH})" != "" ]; then
  if [ "$DOECHO" == "1" ] || [ "$DOECHO" == "2" ]; then
    echo "WARNING: failed code/env push check. Push your archive."
  fi
  exit 1
else
  if [ "$DOECHO" == "2" ]; then
    echo "SUCCESS: wov-push-check push code/env."
  fi
fi

# check secrets
if [ "$(cd ${WOV_BASEDIR}/wovtools/secrets && git log origin/${MYSBRANCH}..${MYSBRANCH})" != "" ]; then
  if [ "$DOECHO" == "1" ] || [ "$DOECHO" == "2" ]; then
    echo "WARNING: failed secrets push check. Push your secrets archive."
  fi
  exit 1
else
  if [ "$DOECHO" == "2" ]; then
    echo "SUCCESS: wov-push-check push secrets."
  fi
fi



if [ "$DOECHO" == "2" ]; then
  echo "SUCCESS: wov-push-check"
fi
