#!/usr/bin/env bash

. ./testutil.sh

Test "wov-env -v should be 0"
TestEquals "`../bin/wov-env -v`" "0"
# if [ "`../bin/wov-env -v`" != "0" ]; then TestError; fi

Test "wov-env -e should echo variables"
TestNotEquals "`../bin/wov-env -e`" ""
# if [ "`../bin/wov-env -e`" == "" ]; then TestError; fi

. ../bin/wov-env 
Test "wov-env --var WOV_AIM should equal env variable"
TestEquals "`../bin/wov-env --var WOV_AIM`" "$WOV_AIM"
Test "wov-env --var K8S_CONTEXT should equal env variable"
TestEquals "`../bin/wov-env --var K8S_CONTEXT `" "$K8S_CONTEXT"
Test "wov-env should have X variables"
TestEquals "`../bin/wov-env -e | wc -l | tr -d '[:space:]'`" "9"
Test "wov-env -c  should have X variables"
TestEquals "`../bin/wov-env -e -c | wc -l | tr -d '[:space:]'`" "11"
Test "wov-env --var CL_REGION should not be set"
TestEquals "`../bin/wov-env --var CL_REGION`" ""
Test "wov-env -c --var CL_REGION should now be set"
TestNotEquals "`../bin/wov-env -c --var CL_REGION`" ""

Test "wov-env --var WOV_PVER should equal env var"
TestEquals "`../bin/wov-env --var WOV_PVER`" "$WOV_PVER"
Test "wov-env --var WOV_SVER should equal env var"
TestEquals "`../bin/wov-env --var WOV_SVER`" "$WOV_SVER"

